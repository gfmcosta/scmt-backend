@{
ViewData["Title"] = "Documentação";
}
<!DOCTYPE html>
<html lang="pt-PT">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/easymde/dist/easymde.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"> <!-- Para ícones -->
    <title>Documentação</title>
    <style>
        .styled-button {
            background-color: #e74c3c; /* Cor de fundo vermelha */
            color: white; /* Texto branco */
            border: none; /* Sem borda */
            border-radius: 5px; /* Bordas arredondadas */
            padding: 10px 15px; /* Espaçamento interno */
            font-size: 16px; /* Tamanho da fonte */
            cursor: pointer; /* Mão ao passar o mouse */
            transition: background-color 0.3s; /* Transição suave */
            display: flex; /* Usado para alinhar ícone e texto */
            align-items: center; /* Centraliza o ícone verticalmente */
        }

        .styled-button i {
            margin-right: 8px; /* Espaço entre o ícone e o texto */
        }

        .styled-button:hover {
            background-color: #c0392b; /* Cor de fundo ao passar o mouse */
        }
    </style>
</head>
<body>
<h1>Documentação Portal SCMT</h1>
<div style="display: flex; justify-content: flex-end; margin: 10px 0;">
    <button id="download-pdf" title="Download PDF" class="styled-button">
        <i class="fas fa-file-pdf"></i> Download PDF
    </button>
</div>
<div id="markdown-content"></div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/marked/2.1.3/marked.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/easymde/dist/easymde.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script>
    const markdownContentElement = document.getElementById('markdown-content');
    const downloadPdfButton = document.getElementById('download-pdf');
    let easyMDE;

    // Função para carregar o conteúdo Markdown do servidor
    async function loadMarkdown() {
        const response = await fetch('/api/markdown/get'); // Endpoint para obter o conteúdo
        if (response.ok) {
            const content = await response.text();
            markdownContentElement.innerHTML = marked(content); // Renderizar Markdown
        } else {
            markdownContentElement.innerHTML = 'Erro ao carregar o conteúdo.';
        }
    }

    // Função para converter Markdown para PDF
    async function downloadPDF() {
        const { jsPDF } = window.jspdf;

        const title = "Documentação SCMT"; // Define o título
        const content = markdownContentElement.innerText; // Obter texto do conteúdo Markdown
        const doc = new jsPDF();

        // Adiciona o título no topo do PDF
        doc.setFontSize(20); // Define o tamanho da fonte para o título
        doc.text(title, 10, 10); // Adiciona o título na posição (10, 10)

        // Adiciona um espaço após o título
        doc.setFontSize(12); // Define o tamanho da fonte para o conteúdo
        doc.text(content, 10, 20); // Adiciona o conteúdo a partir da posição (10, 20)

        doc.save('SCMT-doc.pdf'); // Salva o PDF
    }


    // Carregar o conteúdo no início
    loadMarkdown();

    // Adicionar evento de clique para o botão de download
    downloadPdfButton.addEventListener('click', downloadPDF);
</script>
</body>
</html>
